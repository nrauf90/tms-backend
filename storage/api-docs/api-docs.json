{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel API Documentation",
        "description": "Laravel API documentation with Swagger",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Laravel API Server"
        }
    ],
    "paths": {
        "/api/companies": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get list of companies",
                "description": "Returns paginated list of companies",
                "operationId": "80eb39cf3f8d7b480171fea2f33d6060",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "type": "string"
                                                            },
                                                            "address": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "boolean"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Companies retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No companies found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createCompany": {
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Create new company",
                "description": "Creates a new company",
                "operationId": "b85f91b2db34e920d0cecc16a2b31d4a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "info@acme.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Business St"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Company created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateCompany/{id}": {
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Update company",
                "description": "Updates an existing company",
                "operationId": "49ac960df35d39409e4f774f914be7d3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteCompany/{id}": {
            "delete": {
                "tags": [
                    "Companies"
                ],
                "summary": "Delete company",
                "description": "Deletes an existing company",
                "operationId": "4984a17708bc59b1cdbfcef0fd9f482a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/showCompany/{id}": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get company details",
                "description": "Returns details of a specific company",
                "operationId": "ae8e9a356510e4da1d58243dd867fdf0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company details retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateCompanyAdmin/{id}": {
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Update company admin",
                "description": "Updates company admin information",
                "operationId": "a663f5e40892536d6c98a67bc49457a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company to update admin for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "admin_id": {
                                        "type": "integer"
                                    },
                                    "admin_name": {
                                        "type": "string"
                                    },
                                    "admin_email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company admin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company admin updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/showCompany": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get current company details",
                "description": "Returns details of the currently authenticated company",
                "operationId": "f46631181f9b3900d4c053639e7c4d85",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company details retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/companyUsers": {
            "get": {
                "tags": [
                    "Company Users"
                ],
                "summary": "Get list of company users",
                "description": "Returns paginated list of users associated with the company",
                "operationId": "211917c591cfdc1fb42407ac044ba8bd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "company_id": {
                                                                "type": "integer"
                                                            },
                                                            "user_id": {
                                                                "type": "integer"
                                                            },
                                                            "role": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "boolean"
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "email": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company users retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createCompanyUser": {
            "post": {
                "tags": [
                    "Company Users"
                ],
                "summary": "Add user to company",
                "description": "Associates a user with the company",
                "operationId": "0d382346f206a3c6c4684437937cd4ac",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "role"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "employee"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User added to company successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User added to company successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateCompanyUser/{id}": {
            "post": {
                "tags": [
                    "Company Users"
                ],
                "summary": "Update company user",
                "description": "Updates the role or status of a company user",
                "operationId": "d4b39486d60bd8baa81bfcea4e4af2d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "example": "manager"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company user updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company user updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company user not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteCompanyUser/{id}": {
            "delete": {
                "tags": [
                    "Company Users"
                ],
                "summary": "Remove user from company",
                "description": "Removes a user's association with the company",
                "operationId": "30f2707da242e1e4038648d0df3dc18a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company user to remove",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User removed from company successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User removed from company successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company user not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of countries",
                "description": "Returns list of all available countries",
                "operationId": "124db23223a1f41b77e6de87362eaa2b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "phone_code": {
                                                        "type": "string"
                                                    },
                                                    "currency": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Countries retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No countries found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/response-testing": {
            "get": {
                "tags": [
                    "Testing"
                ],
                "summary": "Test API response format",
                "description": "Returns a sample API response for testing purposes",
                "operationId": "5a5b087c9a403631d2922d5a0843b7f0",
                "responses": {
                    "200": {
                        "description": "Sample response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Operation Successfully Performed"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terminal Created Successfully"
                                        },
                                        "payload": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "terminal_name": {
                                                    "type": "string",
                                                    "example": "Terminal Smart"
                                                },
                                                "latitude": {
                                                    "type": "string",
                                                    "example": "33.6224130"
                                                },
                                                "longitude": {
                                                    "type": "string",
                                                    "example": "longitude"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get paginated list of currencies",
                "description": "Returns a paginated list of all currencies in the system",
                "operationId": "currencyIndex",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "US Dollar"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "example": "$"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Currencies retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No currencies found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No currency found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/createCurrency": {
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Create a new currency",
                "description": "Creates a new currency with the provided details",
                "operationId": "storeCurrency",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "symbol"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Euro"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "symbol": {
                                        "type": "string",
                                        "example": "€"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Euro"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "symbol": {
                                                    "type": "string",
                                                    "example": "€"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Currency created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to store currency"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/updateCurrency/{id}": {
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Update an existing currency",
                "description": "Updates a currency's details by ID",
                "operationId": "updateCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the currency to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Euro"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "symbol": {
                                        "type": "string",
                                        "example": "€"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Currency updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Currency not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to update currency"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteCurrency/{id}": {
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete a currency",
                "description": "Deletes a currency by ID",
                "operationId": "destroyCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the currency to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Currency deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Currency not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to delete currency"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/allCurrencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get all currencies",
                "description": "Returns a list of all currencies without pagination",
                "operationId": "getAllCurrencies",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "US Dollar"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "example": "$"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Currencies retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No currencies found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Currency Found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get list of languages",
                "description": "Returns list of all available languages",
                "operationId": "13f72dfeebea6adfa84684cf31bade15",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Languages retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No languages found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createLanguages": {
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Create new language",
                "description": "Creates a new language entry",
                "operationId": "5077158691ffca8bbe1fcee7b46d7202",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "English"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Language created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Language created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateLanguages/{id}": {
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Update language",
                "description": "Updates an existing language entry",
                "operationId": "852c5258cf811ec909a7b47d0afbc327",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of language to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "English"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Language updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteLanguages/{id}": {
            "delete": {
                "tags": [
                    "Languages"
                ],
                "summary": "Delete language",
                "description": "Deletes an existing language entry",
                "operationId": "630af994cbdb70efeeee2013c952171b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of language to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Language deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/modules": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Get list of modules",
                "description": "Returns list of all available modules with their features",
                "operationId": "2e94a3c5aa6628f36f22988ceb189fcc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "boolean"
                                                    },
                                                    "features": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "description": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Modules retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No modules found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createModule": {
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Create new module",
                "description": "Creates a new module with specified features",
                "operationId": "5db0d54d46d4cc7ffd46af0fa319e5fe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "User Management"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Module for managing users"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateModule/{id}": {
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Update module",
                "description": "Updates an existing module",
                "operationId": "686cd4e858b0942c11f5aa611cc288cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of module to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Module not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteModule/{id}": {
            "delete": {
                "tags": [
                    "Modules"
                ],
                "summary": "Delete module",
                "description": "Deletes an existing module",
                "operationId": "0238d12d593e714843630ddf3b3da52f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of module to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Module not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get all notifications",
                "description": "Returns list of all notifications for the authenticated user",
                "operationId": "0bb334cc4f9efd4fc1e6a0b32d8cd65d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "read_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No notifications found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/unreadNotifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get unread notifications",
                "description": "Returns list of unread notifications for the authenticated user",
                "operationId": "f89d5fc5876af6f33385974c983b403a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unread notifications retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/newNotification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create new notification",
                "description": "Creates a new notification",
                "operationId": "ba31710c90bb6f5314f8c12d649e8d15",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "message"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "info"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "New notification message"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Notification created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/showNotification/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification by ID",
                "description": "Returns a specific notification",
                "operationId": "a80ee4140131e852745e5830bbe27399",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of notification to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "read_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/readAllNotifications/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as read",
                "description": "Marks all notifications as read for a specific user",
                "operationId": "25b9d2afe6eced6130f3f2f8c94ebc6c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifications marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No unread notifications found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/readNotification/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "description": "Marks a specific notification as read",
                "operationId": "46bf082f5822ace24200b2f0466fa407",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteNotification/{id}": {
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete notification",
                "description": "Deletes a specific notification",
                "operationId": "8554eb0c0be60627956d615158a1bcdb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/offlineMethods": {
            "get": {
                "tags": [
                    "Offline Payments"
                ],
                "summary": "Get all offline payment methods",
                "description": "Returns list of all configured offline payment methods",
                "operationId": "4aabf0491bcb93fbf25d5396b91575ac",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "instructions": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "boolean"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment methods retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No payment methods found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createOfflineMethod": {
            "post": {
                "tags": [
                    "Offline Payments"
                ],
                "summary": "Create new offline payment method",
                "description": "Creates a new offline payment method",
                "operationId": "404b8653ca5706b88b310fefade17723",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "instructions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Bank Transfer"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Direct bank transfer payment"
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "example": "Please transfer the amount to Account #12345"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment method created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "instructions": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateOfflineMethod/{id}": {
            "post": {
                "tags": [
                    "Offline Payments"
                ],
                "summary": "Update offline payment method",
                "description": "Updates an existing offline payment method",
                "operationId": "e7337403d5926a1eb719354ec5a99881",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payment method to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Bank Transfer"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated bank transfer payment"
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "example": "Updated transfer instructions"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment method updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "instructions": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteOfflineMethod/{id}": {
            "delete": {
                "tags": [
                    "Offline Payments"
                ],
                "summary": "Delete offline payment method",
                "description": "Deletes an existing offline payment method",
                "operationId": "89afb92d87df689d2e25b45225f6b684",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payment method to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/packages": {
            "get": {
                "tags": [
                    "Packages"
                ],
                "summary": "Get paginated list of packages",
                "description": "Returns paginated list of packages with their modules and features",
                "operationId": "fa711def65ef2543611b07b2681b876d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "duration": {
                                                                "type": "integer"
                                                            },
                                                            "status": {
                                                                "type": "boolean"
                                                            },
                                                            "modules": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Packages retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No packages found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createPackages": {
            "post": {
                "tags": [
                    "Packages"
                ],
                "summary": "Create new package",
                "description": "Creates a new package with specified modules and features",
                "operationId": "42a54cef0dda9ae35e41a7e733344d87",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "duration"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Enterprise Package"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Complete enterprise solution"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 999.99
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "modules": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Package created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Package created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updatePackages/{id}": {
            "post": {
                "tags": [
                    "Packages"
                ],
                "summary": "Update package",
                "description": "Updates an existing package with new data",
                "operationId": "e7683e90e556d349e432295f55839293",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of package to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "duration": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "modules": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Package updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Package updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Package not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deletePackages/{id}": {
            "delete": {
                "tags": [
                    "Packages"
                ],
                "summary": "Delete package",
                "description": "Deletes an existing package",
                "operationId": "334e072abd77e2178d831d86ea8d41b9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of package to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Package deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Package not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/packageDetails/{id}": {
            "get": {
                "tags": [
                    "Packages"
                ],
                "summary": "Get package details",
                "description": "Returns detailed information about a specific package including its modules and features",
                "operationId": "89f6acb508baf153648bbd395fb31646",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of package to get details for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "duration": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "features": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Package details retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Package not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/all-packages": {
            "get": {
                "tags": [
                    "Packages"
                ],
                "summary": "Get all packages",
                "description": "Returns list of all packages without pagination",
                "operationId": "090060888ee1c38881a840a829701ab4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "duration": {
                                                        "type": "integer"
                                                    },
                                                    "status": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All packages retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No packages found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/storePaypalInfo": {
            "post": {
                "tags": [
                    "PayPal"
                ],
                "summary": "Configure PayPal gateway",
                "description": "Store PayPal gateway configuration settings",
                "operationId": "6eea4573f0424f8e38777cbf87a4431e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "client_secret",
                                    "mode"
                                ],
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "example": "YOUR_PAYPAL_CLIENT_ID"
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "example": "YOUR_PAYPAL_CLIENT_SECRET"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "enum": [
                                            "sandbox",
                                            "live"
                                        ],
                                        "example": "sandbox"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PayPal configuration stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "client_id": {
                                                    "type": "string"
                                                },
                                                "mode": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PayPal configuration stored successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/paypalInfo": {
            "get": {
                "tags": [
                    "PayPal"
                ],
                "summary": "Get PayPal gateway information",
                "description": "Returns the current PayPal gateway configuration settings",
                "operationId": "8d982d911c139e1ffcecce9cbaf34240",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "client_id": {
                                                    "type": "string"
                                                },
                                                "mode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "sandbox",
                                                        "live"
                                                    ]
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PayPal configuration retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PayPal configuration not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updatePaypalInfo/{id}": {
            "post": {
                "tags": [
                    "PayPal"
                ],
                "summary": "Update PayPal gateway configuration",
                "description": "Updates the existing PayPal gateway configuration settings",
                "operationId": "b23d9b4af3b03148f01ea92fb7f0659c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of PayPal configuration to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "example": "UPDATED_PAYPAL_CLIENT_ID"
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "example": "UPDATED_PAYPAL_CLIENT_SECRET"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "enum": [
                                            "sandbox",
                                            "live"
                                        ],
                                        "example": "live"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PayPal configuration updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "client_id": {
                                                    "type": "string"
                                                },
                                                "mode": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PayPal configuration updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PayPal configuration not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/permission": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get list of permissions",
                "description": "Returns list of all permissions",
                "operationId": "4b8e3995891729ea0e6debd378e5e2f1",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No permissions found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/permission/{permission}": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create new permission",
                "description": "Creates a new permission with the specified name",
                "operationId": "1eba167047ffd163cb3aced800a9e721",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Name of the permission to create",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Permission created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission",
                "description": "Deletes a permission",
                "operationId": "f1a45c67d5c4a229e25fc6a701231587",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                }
            }
        },
        "/api/permissions/{pname}/users/{permission}": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Assign permission to user",
                "description": "Assigns a permission to a specific user",
                "operationId": "b864f488fd2f994dbc9cc1bf3d58ae6c",
                "parameters": [
                    {
                        "name": "pname",
                        "in": "path",
                        "description": "Name or ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to assign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission assigned successfully"
                    },
                    "404": {
                        "description": "User or permission not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Revoke permission from user",
                "description": "Removes a permission from a specific user",
                "operationId": "471af15bcf9a4415c1949e9d004adc29",
                "parameters": [
                    {
                        "name": "pname",
                        "in": "path",
                        "description": "Name or ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to revoke",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission revoked successfully"
                    },
                    "404": {
                        "description": "User or permission not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/permissions/users/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get user permissions",
                "description": "Returns all permissions assigned to a specific user",
                "operationId": "16a681bd9042918fb3614f941215917d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User permissions retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createPermissionGroup": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create permission group",
                "description": "Creates a new permission group",
                "operationId": "555e191593c99143154d3069d920790e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission group created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/deletePermissionGroup/{id}": {
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission group",
                "description": "Deletes a permission group",
                "operationId": "5a7991f359391db80413028d689e3eef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission group deleted successfully"
                    },
                    "404": {
                        "description": "Permission group not found"
                    }
                }
            }
        },
        "/api/getAllGroups": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get all permission groups",
                "description": "Returns list of all permission groups",
                "operationId": "337f4479553c75ff3657987058382f49",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/assignPermissiontoRole/{id}": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Assign permissions to role",
                "description": "Assigns multiple permissions to a role",
                "operationId": "07abf0dc33370fa56cb56d013da01e4b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/api/edit/permission/{id}": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Edit permission",
                "description": "Updates a permission's details",
                "operationId": "84762bca0c00a7447402717de589b2cc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission updated successfully"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                }
            }
        },
        "/api/addGenericPermissions": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create generic permissions",
                "description": "Creates generic permissions for modules",
                "operationId": "12200d06111540470c91ab96742624e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Generic permissions created successfully"
                    }
                }
            }
        },
        "/api/getGenericPermissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get generic permissions",
                "description": "Returns list of generic permissions",
                "operationId": "21dbf1ab20fcc609e8fc5ec4908fcae6",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/getGroupedPermissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get grouped permissions",
                "description": "Returns permissions grouped by their groups",
                "operationId": "2c442fc014018946aa89476ff871014d",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/getPermission/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission by ID",
                "description": "Returns details of a specific permission",
                "operationId": "2caae84b6dd30afe16dd39068b2df51a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                }
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "Permission Groups"
                ],
                "summary": "Get list of permission groups",
                "description": "Returns list of all permission groups",
                "operationId": "55e91561b2bed448f55081870bd668ea",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission groups retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No groups found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createGroup": {
            "post": {
                "tags": [
                    "Permission Groups"
                ],
                "summary": "Create new permission group",
                "description": "Creates a new permission group",
                "operationId": "34d253a4c489956257f62357b89f9589",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin Group"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Group for administrative permissions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission group created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission group created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateGroup/{id}": {
            "post": {
                "tags": [
                    "Permission Groups"
                ],
                "summary": "Update permission group",
                "description": "Updates an existing permission group",
                "operationId": "13bb1859fbf1152961edb77e8f6d2098",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission group to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Admin Group"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated group description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission group updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission group updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission group not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteGroup/{id}": {
            "delete": {
                "tags": [
                    "Permission Groups"
                ],
                "summary": "Delete permission group",
                "description": "Deletes an existing permission group",
                "operationId": "91415abb140c6790a45360d62a7d9413",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission group to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission group deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission group deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission group not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account and returns access token",
                "operationId": "25dc775588d2e73b509bcb375d425b27",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "fname",
                                    "lname",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "fname": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error code": {
                                            "type": "string",
                                            "example": "401"
                                        },
                                        "error_message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticates user and returns access token",
                "operationId": "82029854b7191d64582592c46e594dfd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "description": "Optional role to verify",
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string"
                                                },
                                                "refreshToken": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "fullName": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "ability": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error message": {
                                            "type": "string",
                                            "example": "Unauthorised"
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "404"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/responseTesting": {
            "get": {
                "tags": [
                    "Testing"
                ],
                "summary": "Test API response format",
                "description": "Returns a sample API response for testing purposes",
                "operationId": "c8ae2f58f029b08beccae2ed5d58cd82",
                "responses": {
                    "200": {
                        "description": "Sample response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Operation Successfully Performed"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test Response"
                                        },
                                        "payload": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/user/role": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles",
                "description": "Returns list of all roles with their permissions",
                "operationId": "35055686a5bc83fa89e98a6199ccec27",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roles retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No roles found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/role/{role}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role details",
                "description": "Returns role data with its permissions",
                "operationId": "8c9fb82a05116c74989fdfc72146aa06",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Name of the role",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Add new role",
                "description": "Creates a new role with specified name",
                "operationId": "a2ef8509fecbc4cb404e6d8c946905c2",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Name of the role to create",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "edit_posts",
                                            "delete_posts"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/user/role/{id}/edit": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Edit role",
                "description": "Updates role data and permissions",
                "operationId": "301a668b99027e1b2453c8483b0c3f99",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/api/role/{id}/permissions": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role permissions",
                "description": "Returns permissions assigned to a role",
                "operationId": "8bc8aa4fcb4e2f1dec452a0ce92f615b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/api/user/{user}/role": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get user roles",
                "description": "Returns roles assigned to a user",
                "operationId": "ed1415d0ea69f0322d752b005fa3af28",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/role/{role}/user/{user}": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign role to user",
                "description": "Assigns a role to a specific user",
                "operationId": "f63ec1c537bb7c7aac4340aa6dcb54fb",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role assigned successfully"
                    },
                    "404": {
                        "description": "Role or user not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Remove role from user",
                "description": "Removes a role from a specific user",
                "operationId": "a39b5cbaa86618cd1a6d38c1fb9398a8",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role removed successfully"
                    },
                    "404": {
                        "description": "Role or user not found"
                    }
                }
            }
        },
        "/api/storeStripeInfo": {
            "post": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Configure Stripe gateway",
                "description": "Store Stripe gateway configuration settings",
                "operationId": "09ef0502bc9eafa4eca259ab4835675e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "publishable_key",
                                    "secret_key"
                                ],
                                "properties": {
                                    "publishable_key": {
                                        "type": "string",
                                        "example": "pk_test_..."
                                    },
                                    "secret_key": {
                                        "type": "string",
                                        "example": "sk_test_..."
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Stripe configuration stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "publishable_key": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stripe configuration stored successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/stripeInfo": {
            "get": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Get Stripe gateway information",
                "description": "Returns the current Stripe gateway configuration settings",
                "operationId": "eb9ec642f203cbbb097f719f3307d234",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "publishable_key": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stripe configuration retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stripe configuration not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateStripeInfo/{id}": {
            "post": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Update Stripe gateway configuration",
                "description": "Updates the existing Stripe gateway configuration settings",
                "operationId": "b60d645bd946cd3b1459b8e0d669c1fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Stripe configuration to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "publishable_key": {
                                        "type": "string",
                                        "example": "pk_test_..."
                                    },
                                    "secret_key": {
                                        "type": "string",
                                        "example": "sk_test_..."
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stripe configuration updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "publishable_key": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stripe configuration updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stripe configuration not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/stripe/process-payment": {
            "post": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Process a payment through Stripe",
                "description": "Process a payment using Stripe payment gateway",
                "operationId": "8a1dab1df9044d674ae06e52fe06db7e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency",
                                    "payment_method",
                                    "description"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "pm_card_visa"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Payment for Package XYZ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "number"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment processed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Payment processing failed"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/timezones": {
            "get": {
                "tags": [
                    "Timezones"
                ],
                "summary": "Get list of timezones",
                "description": "Returns paginated list of all available timezones",
                "operationId": "9e9e14d48b5dd5993c3d0edcd80c8723",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "America/New_York"
                                                    },
                                                    "offset": {
                                                        "type": "string",
                                                        "example": "UTC-05:00"
                                                    },
                                                    "diff_from_gtm": {
                                                        "type": "string",
                                                        "example": "-5"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timezones retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No timezones found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/createTimezones": {
            "post": {
                "tags": [
                    "Timezones"
                ],
                "summary": "Create new timezone",
                "description": "Creates a new timezone entry",
                "operationId": "3513fb6a302134410a2a9ecf7df768e3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "offset",
                                    "diff_from_gtm"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "America/New_York"
                                    },
                                    "offset": {
                                        "type": "string",
                                        "example": "UTC-05:00"
                                    },
                                    "diff_from_gtm": {
                                        "type": "string",
                                        "example": "-5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Timezone created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "offset": {
                                                    "type": "string"
                                                },
                                                "diff_from_gtm": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timezone created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/updateTimezones/{id}": {
            "post": {
                "tags": [
                    "Timezones"
                ],
                "summary": "Update timezone",
                "description": "Updates an existing timezone entry",
                "operationId": "d9c546906fc4b8c7e77583d3309cc27c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of timezone to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "America/New_York"
                                    },
                                    "offset": {
                                        "type": "string",
                                        "example": "UTC-05:00"
                                    },
                                    "diff_from_gtm": {
                                        "type": "string",
                                        "example": "-5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Timezone updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "offset": {
                                                    "type": "string"
                                                },
                                                "diff_from_gtm": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timezone updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timezone not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/deleteTimezones/{id}": {
            "delete": {
                "tags": [
                    "Timezones"
                ],
                "summary": "Delete timezone",
                "description": "Deletes an existing timezone entry",
                "operationId": "9b363ddb47de3a146283a5cf209da3c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of timezone to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timezone deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timezone deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timezone not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/all-timezones": {
            "get": {
                "tags": [
                    "Timezones"
                ],
                "summary": "Get all timezones",
                "description": "Returns list of all timezones without pagination",
                "operationId": "4ac86668fd0525c3126605a0dd050d96",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "diff_from_gtm": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All timezones retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No timezones found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/getAllUsers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users with pagination",
                "operationId": "ccdfbf0be7cafca9cd0cfb7f990238b3",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/addNewUser": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Creates a new user and returns the user data",
                "operationId": "2f1e71ea1230156c288271dab9297a2f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "fname",
                                    "lname",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "fname": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/showUser/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Returns user data",
                "operationId": "cdbb665ebd52b2d51a6b72e0ab9ce490",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/updateUser/{id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Updates user data",
                "operationId": "f99782d00a94fd02b9016c38459161c9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "fname": {
                                        "type": "string"
                                    },
                                    "lname": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/deleteUser/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Deletes a user by ID",
                "operationId": "45b55a7f3f023e2dd842a1cc4b7e9a96",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/changepassword/{user}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Change user password",
                "description": "Changes the password for a specific user",
                "operationId": "b5c421a417d72a6ee137bafa1eebd063",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/resetPasswordLink": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Send password reset link",
                "description": "Sends a password reset link to user's email",
                "operationId": "751ea3ae7bb7bb76bfb3f6b98e24a0d3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Reset password",
                "description": "Resets user password using token",
                "operationId": "48208475dfcc36888f80b3075a0fc707",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/loggedInUser": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get logged in user",
                "description": "Returns the currently authenticated user's data",
                "operationId": "237f265f2e6790e05981725102a328f7",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/days": {
            "get": {
                "tags": [
                    "Week Days"
                ],
                "summary": "Get list of week days",
                "description": "Returns list of all week days",
                "operationId": "2bd8200981b839387017d5e1610f7a6a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Monday"
                                                    },
                                                    "short_name": {
                                                        "type": "string",
                                                        "example": "Mon"
                                                    },
                                                    "status": {
                                                        "type": "boolean"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Week days retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No week days found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/weeks": {
            "post": {
                "tags": [
                    "Week Days"
                ],
                "summary": "Create new week day",
                "description": "Creates a new week day entry",
                "operationId": "95110b0c7720ac62fb801e1d7fc777ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "short_name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Monday"
                                    },
                                    "short_name": {
                                        "type": "string",
                                        "example": "Mon"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Week day created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "short_name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Week day created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/weeks/{id}": {
            "put": {
                "tags": [
                    "Week Days"
                ],
                "summary": "Update week day",
                "description": "Updates an existing week day entry",
                "operationId": "c1dc333090e1d8dcf2da0aa59c844d2b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of week day to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Monday"
                                    },
                                    "short_name": {
                                        "type": "string",
                                        "example": "Mon"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Week day updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "short_name": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Week day updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Week day not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Week Days"
                ],
                "summary": "Delete week day",
                "description": "Deletes an existing week day entry",
                "operationId": "da2585dff929aa01a19dd8feb09e0bce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of week day to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Week day deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Week day deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Week day not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/all-weeks": {
            "get": {
                "tags": [
                    "Week Days"
                ],
                "summary": "Get all week days",
                "description": "Returns list of all week days without pagination",
                "operationId": "20a69547ed42bfb7a65bdcdc775463af",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "short_name": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "boolean"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All week days retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No week days found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Companies",
            "description": "API Endpoints for Company Management"
        },
        {
            "name": "Company Users",
            "description": "API Endpoints for Company User Management"
        },
        {
            "name": "Countries",
            "description": "API Endpoints for Country Management"
        },
        {
            "name": "Currencies",
            "description": "API Endpoints for managing currencies"
        },
        {
            "name": "Languages",
            "description": "API Endpoints for Language Management"
        },
        {
            "name": "Modules",
            "description": "API Endpoints for Module Management"
        },
        {
            "name": "Notifications",
            "description": "API Endpoints for Notification Management"
        },
        {
            "name": "Offline Payments",
            "description": "API Endpoints for Offline Payment Method Management"
        },
        {
            "name": "Packages",
            "description": "API Endpoints for Package Management"
        },
        {
            "name": "PayPal",
            "description": "API Endpoints for PayPal Payment Gateway Management"
        },
        {
            "name": "Permissions",
            "description": "API Endpoints for Permission Management"
        },
        {
            "name": "Permission Groups",
            "description": "API Endpoints for Permission Group Management"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for User Registration and Authentication"
        },
        {
            "name": "Testing",
            "description": "API Endpoints for Response Testing"
        },
        {
            "name": "Roles",
            "description": "API Endpoints for Role Management"
        },
        {
            "name": "Stripe",
            "description": "API Endpoints for Stripe Payment Gateway Management"
        },
        {
            "name": "Timezones",
            "description": "API Endpoints for Timezone Management"
        },
        {
            "name": "Users",
            "description": "API Endpoints for User Management"
        },
        {
            "name": "Week Days",
            "description": "API Endpoints for Week Days Management"
        }
    ],
    "security": [
        {
            "apiAuth": []
        }
    ]
}